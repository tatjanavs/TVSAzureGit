{
	"name": "dataflowBlob_transform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sinkBlob",
						"type": "DatasetReference"
					},
					"name": "MoviesADLS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureTransformedBlob",
						"type": "DatasetReference"
					},
					"name": "DWStream"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> MoviesADLS",
				"MoviesADLS select(mapColumn(",
				"          sifra = Column_1,",
				"          naziv = Column_2,",
				"          rang = Column_3",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(toInteger(sifra)>1) ~> filter1",
				"filter1 derive(PrimaryGenre = left(naziv,3)) ~> derivedColumn1",
				"derivedColumn1 window(over(PrimaryGenre),",
				"     asc(naziv, true),",
				"     rang = rank()) ~> window1",
				"window1 aggregate(groupBy(PrimaryGenre),",
				"     numberOfItems = count(),",
				"          topItem = first(naziv)) ~> aggregate1",
				"aggregate1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> DWStream"
			]
		}
	}
}